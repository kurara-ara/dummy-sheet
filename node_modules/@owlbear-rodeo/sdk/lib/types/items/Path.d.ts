import { Item } from "./Item";
export interface PathStyle {
    fillColor: string;
    fillOpacity: number;
    strokeColor: string;
    strokeOpacity: number;
    strokeWidth: number;
    strokeDash: number[];
}
export declare enum Command {
    MOVE = 0,
    LINE = 1,
    QUAD = 2,
    CONIC = 3,
    CUBIC = 4,
    CLOSE = 5
}
export declare type MoveCommand = [Command.MOVE, number, number];
export declare type LineCommand = [Command.LINE, number, number];
export declare type QuadCommand = [Command.QUAD, number, number, number, number];
export declare type ConicCommand = [
    Command.CONIC,
    number,
    number,
    number,
    number,
    number
];
export declare type CubicCommand = [
    Command.CUBIC,
    number,
    number,
    number,
    number,
    number,
    number
];
export declare type CloseCommand = [Command.CLOSE];
export declare type PathCommand = MoveCommand | LineCommand | QuadCommand | ConicCommand | CubicCommand | CloseCommand;
export interface Path extends Item {
    type: "PATH";
    commands: PathCommand[];
    style: PathStyle;
    fillRule: string;
}
export declare function isPath(item: Item): item is Path;
