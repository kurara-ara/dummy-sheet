import MessageBus from "../messages/MessageBus";
import { Metadata } from "../types/Metadata";
import { Permission } from "../types/Permission";
import { Player } from "../types/Player";
declare class PlayerApi {
    private messageBus;
    constructor(messageBus: MessageBus);
    get id(): string;
    getSelection(): Promise<string[] | undefined>;
    select(items: string[], replace?: boolean): Promise<void>;
    deselect(items: string[] | undefined): Promise<void>;
    getName(): Promise<string>;
    setName(name: string): Promise<void>;
    getColor(): Promise<string>;
    setColor(color: string): Promise<void>;
    getSyncView(): Promise<boolean>;
    setSyncView(syncView: boolean): Promise<void>;
    getId(): Promise<string>;
    getRole(): Promise<"GM" | "PLAYER">;
    getMetadata(): Promise<Metadata>;
    setMetadata(update: Partial<Metadata>): Promise<void>;
    hasPermission(permission: Permission): Promise<boolean>;
    getConnectionId(): Promise<string>;
    onChange(callback: (player: Player) => void): () => void;
}
export default PlayerApi;
