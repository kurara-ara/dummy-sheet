var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { normalizeIconPaths } from "../common/normalize";
class ActionApi {
    constructor(messageBus) {
        this.messageBus = messageBus;
    }
    getWidth() {
        return __awaiter(this, void 0, void 0, function* () {
            const { width } = yield this.messageBus.sendAsync("OBR_ACTION_GET_WIDTH", {});
            return width;
        });
    }
    setWidth(width) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.messageBus.sendAsync("OBR_ACTION_SET_WIDTH", { width });
        });
    }
    getHeight() {
        return __awaiter(this, void 0, void 0, function* () {
            const { height } = yield this.messageBus.sendAsync("OBR_ACTION_GET_HEIGHT", {});
            return height;
        });
    }
    setHeight(height) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.messageBus.sendAsync("OBR_ACTION_SET_HEIGHT", { height });
        });
    }
    getBadgeText() {
        return __awaiter(this, void 0, void 0, function* () {
            const { badgeText } = yield this.messageBus.sendAsync("OBR_ACTION_GET_BADGE_TEXT", {});
            return badgeText;
        });
    }
    setBadgeText(badgeText) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.messageBus.sendAsync("OBR_ACTION_SET_BADGE_TEXT", { badgeText });
        });
    }
    getBadgeBackgroundColor() {
        return __awaiter(this, void 0, void 0, function* () {
            const { badgeBackgroundColor } = yield this.messageBus.sendAsync("OBR_ACTION_GET_BADGE_BACKGROUND_COLOR", {});
            return badgeBackgroundColor;
        });
    }
    setBadgeBackgroundColor(badgeBackgroundColor) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.messageBus.sendAsync("OBR_ACTION_SET_BADGE_BACKGROUND_COLOR", {
                badgeBackgroundColor,
            });
        });
    }
    getIcon() {
        return __awaiter(this, void 0, void 0, function* () {
            const { icon } = yield this.messageBus.sendAsync("OBR_ACTION_GET_ICON", {});
            return icon;
        });
    }
    setIcon(icon) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = normalizeIconPaths([{ icon }]);
            yield this.messageBus.sendAsync("OBR_ACTION_SET_ICON", {
                icon: data[0].icon,
            });
        });
    }
    getTitle() {
        return __awaiter(this, void 0, void 0, function* () {
            const { title } = yield this.messageBus.sendAsync("OBR_ACTION_GET_TITLE", {});
            return title;
        });
    }
    setTitle(title) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.messageBus.sendAsync("OBR_ACTION_SET_TITLE", { title });
        });
    }
    isOpen() {
        return __awaiter(this, void 0, void 0, function* () {
            const { isOpen } = yield this.messageBus.sendAsync("OBR_ACTION_GET_IS_OPEN", {});
            return isOpen;
        });
    }
    onOpenChange(callback) {
        const handleChange = (data) => {
            callback(data.isOpen);
        };
        this.messageBus.send("OBR_ACTION_IS_OPEN_SUBSCRIBE", {});
        this.messageBus.on("OBR_ACTION_IS_OPEN_EVENT_CHANGE", handleChange);
        return () => {
            this.messageBus.send("OBR_IS_OPEN_ACTION_UNSUBSCRIBE", {});
            this.messageBus.off("OBR_ACTION_IS_OPEN_EVENT_CHANGE", handleChange);
        };
    }
}
export default ActionApi;
