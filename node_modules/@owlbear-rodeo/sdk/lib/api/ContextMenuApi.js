var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { normalizeIconPaths } from "../common/normalize";
class ContextMenuApi {
    constructor(messageBus) {
        this.contextMenus = {};
        this.handleClick = (event) => {
            const menu = this.contextMenus[event.id];
            if (menu) {
                menu.onClick(event.context, event.elementId);
            }
        };
        this.messageBus = messageBus;
        messageBus.on("OBR_CONTEXT_MENU_EVENT_CLICK", this.handleClick);
    }
    create(contextMenu) {
        return __awaiter(this, void 0, void 0, function* () {
            this.messageBus.sendAsync("OBR_CONTEXT_MENU_CREATE", {
                id: contextMenu.id,
                shortcut: contextMenu.shortcut,
                icons: normalizeIconPaths(contextMenu.icons),
            });
            this.contextMenus[contextMenu.id] = contextMenu;
        });
    }
    remove(id) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.messageBus.sendAsync("OBR_CONTEXT_MENU_REMOVE", { id });
            delete this.contextMenus[id];
        });
    }
}
export default ContextMenuApi;
