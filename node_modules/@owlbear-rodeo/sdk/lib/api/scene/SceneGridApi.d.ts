import MessageBus from "../../messages/MessageBus";
import { Grid, GridColor, GridLineType, GridMeasurement, GridScale, GridType } from "../../types/Grid";
import { Vector2 } from "../../types/Vector2";
declare class SceneGridApi {
    private messageBus;
    constructor(messageBus: MessageBus);
    getDpi(): Promise<number>;
    getScale(): Promise<GridScale>;
    setScale(scale: string): Promise<void>;
    getColor(): Promise<GridColor>;
    setColor(color: GridColor): Promise<void>;
    getOpacity(): Promise<number>;
    setOpacity(opacity: number): Promise<void>;
    getType(): Promise<GridType>;
    setType(type: GridType): Promise<void>;
    getLineType(): Promise<GridLineType>;
    setLineType(lineType: GridLineType): Promise<void>;
    getMeasurement(): Promise<GridMeasurement>;
    setMeasurement(measurement: GridMeasurement): Promise<void>;
    snapPosition(position: Vector2, snappingSensitivity?: number, useCorners?: boolean): Promise<Vector2>;
    getDistance(from: Vector2, to: Vector2): Promise<number>;
    onChange(callback: (grid: Grid) => void): () => void;
}
export default SceneGridApi;
