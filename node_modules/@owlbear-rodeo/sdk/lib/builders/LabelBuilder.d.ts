import PlayerApi from "../api/PlayerApi";
import { Label, LabelStyle } from "../types/items/Label";
import { TextContent, TextSize } from "../types/items/TextContent";
import { GenericItemBuilder } from "./GenericItemBuilder";
export declare class LabelBuilder extends GenericItemBuilder<LabelBuilder> {
    private _text;
    private _style;
    constructor(player: PlayerApi);
    text(text: TextContent): LabelBuilder;
    width(width: TextSize): LabelBuilder;
    height(height: TextSize): LabelBuilder;
    plainText(plainText: string): LabelBuilder;
    padding(padding: number): LabelBuilder;
    fontFamily(fontFamily: string): LabelBuilder;
    fontSize(fontSize: number): LabelBuilder;
    fontWeight(fontWeight: number): LabelBuilder;
    textAlign(textAlign: "LEFT" | "CENTER" | "RIGHT"): LabelBuilder;
    textAlignVertical(textAlignVertical: "BOTTOM" | "MIDDLE" | "TOP"): LabelBuilder;
    fillColor(fillColor: string): LabelBuilder;
    fillOpacity(fillOpacity: number): LabelBuilder;
    strokeColor(strokeColor: string): LabelBuilder;
    strokeOpacity(strokeOpacity: number): LabelBuilder;
    strokeWidth(strokeWidth: number): LabelBuilder;
    lineHeight(lineHeight: number): LabelBuilder;
    style(style: LabelStyle): LabelBuilder;
    backgroundColor(backgroundColor: string): LabelBuilder;
    backgroundOpacity(backgroundOpacity: number): LabelBuilder;
    cornerRadius(cornerRadius: number): LabelBuilder;
    pointerWidth(pointerWidth: number): LabelBuilder;
    pointerHeight(pointerHeight: number): LabelBuilder;
    pointerDirection(pointerDirection: "UP" | "DOWN" | "LEFT" | "RIGHT"): LabelBuilder;
    build(): Label;
}
