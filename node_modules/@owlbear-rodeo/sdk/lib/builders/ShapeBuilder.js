import { GenericItemBuilder } from "./GenericItemBuilder";
export class ShapeBuilder extends GenericItemBuilder {
    constructor(player) {
        super(player);
        this._width = 0;
        this._height = 0;
        this._shapeType = "RECTANGLE";
        this._style = {
            fillColor: "black",
            fillOpacity: 1,
            strokeColor: "white",
            strokeOpacity: 1,
            strokeWidth: 5,
            strokeDash: [],
        };
        this._item.layer = "DRAWING";
        this._item.name = "Shape";
    }
    width(width) {
        this._width = width;
        return this.self();
    }
    height(height) {
        this._height = height;
        return this.self();
    }
    shapeType(shapeType) {
        this._shapeType = shapeType;
        return this.self();
    }
    style(style) {
        this._style = style;
        return this.self();
    }
    fillColor(fillColor) {
        this._style.fillColor = fillColor;
        return this.self();
    }
    fillOpacity(fillOpacity) {
        this._style.fillOpacity = fillOpacity;
        return this.self();
    }
    strokeColor(strokeColor) {
        this._style.strokeColor = strokeColor;
        return this.self();
    }
    strokeOpacity(strokeOpacity) {
        this._style.strokeOpacity = strokeOpacity;
        return this.self();
    }
    strokeWidth(strokeWidth) {
        this._style.strokeWidth = strokeWidth;
        return this.self();
    }
    strokeDash(strokeDash) {
        this._style.strokeDash = strokeDash;
        return this.self();
    }
    build() {
        return Object.assign(Object.assign({}, this._item), { type: "SHAPE", width: this._width, height: this._height, shapeType: this._shapeType, style: this._style });
    }
}
